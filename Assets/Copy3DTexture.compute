#pragma kernel CSMain

// Textures
Texture3D<float> _SDFTexture1;
Texture3D<float> _SDFTexture2;
RWTexture3D<float> _ResultTexture;

// Blend factor
float _BlendFactor;

// Cubic ease-in-out function
float EaseInOutCubic(float t)
{
    return t < 0.5 ? 4.0 * t * t * t : 1.0 - pow(-2.0 * t + 2.0, 3.0) / 2.0;
}

[numthreads(8, 8, 8)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    // Read SDF values from the textures
    float sdf1 = _SDFTexture1[id];
    float sdf2 = _SDFTexture2[id];
    
    // Apply easing function to blend factor
    float easedBlendFactor = EaseInOutCubic(_BlendFactor);
    
    // Blend the SDF values directly using linear interpolation
    float blendedSDF = lerp(sdf1, sdf2, easedBlendFactor);
    
    // Write the result to the output texture
    _ResultTexture[id] = blendedSDF;
}

